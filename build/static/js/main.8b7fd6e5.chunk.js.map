{"version":3,"sources":["assets/svg-icon/cloud-moon-solid.svg","assets/svg-icon/cloud-sun-solid.svg","components/Navbar.js","components/Utils/Button.js","components/Utils/TextArea.js","components/TextForm.js","components/Utils/Alert.js","components/PageNotFound.js","components/Whatschat/StyledComponents/FileUploaderPaneContainer.js","components/Whatschat/FileUploaderPane.js","Server.js","components/Whatschat/Date.js","components/Whatschat/StyledComponents/MessageContainer.js","components/Whatschat/StyledComponents/MessageWrapper.js","components/Whatschat/ChatMessage.js","components/Whatschat/StyledComponents/ChatPaneWrapper.js","components/Whatschat/ChatPane.js","components/Whatschat/StyledComponents/LoadingWrapper.js","components/Whatschat/LoadingWheel.js","components/Whatschat/StyledComponents/WhatschatContainer.js","components/Whatschat/Whatschat.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","placeholder","style","color","backgroundColor","src","moon","sun","filter","height","width","alt","onClick","toggleMode","defaultProps","aboutText","Button","useState","hover","setHover","toggleHover","shadowColor","bgColor","hue","sat","lum","btnType","onMouseEnter","onMouseLeave","transition","boxShadow","btnText","TextArea","rows","value","text","onChange","TextForm","setText","heading","event","target","newText","toUpperCase","showAlert","toLowerCase","words","split","word","charAt","slice","document","getElementById","select","navigator","clipboard","writeText","join","trim","length","textAlign","Alert","alert","position","left","right","margin","role","message","PageNotFound","FileUploaderPaneContainer","styled","div","FileUploaderPane","chatFile","setChatFile","persons","setPersons","accept","files","required","border","borderRadius","padding","e","setYou","defaultValue","map","item","index","loading","preventDefault","form_data","FormData","append","name","url","setLoading","axios","post","headers","then","res","data","setChat","catch","error","response","status","finally","dateStyleLight","dateStyleDark","Date","date","MessageContainer","person","you","MessageWrapper","nameStyle","gridArea","messageStyle","fontFamily","timeStyle","fontSize","paddingTop","marginLeft","ChatMessage","showdate","time","ChatPaneWrapper","ChatPane","chat","spin","keyframes","LoadingWrapper","LoadingWheel","WhatschatContainer","item1Style","item2Style","overflowY","scrollbarColor","scrollbarWidth","Whatschat","App","setMode","setAlert","msg","setTimeout","body","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8b7fd6e5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cloud-moon-solid.c56a980e.svg\";","export default __webpack_public_path__ + \"static/media/cloud-sun-solid.8a3f2652.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport moon from \"../assets/svg-icon/cloud-moon-solid.svg\";\r\nimport sun from \"../assets/svg-icon/cloud-sun-solid.svg\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${\r\n        props.mode === \"light\" ? \"light\" : \"dark\"\r\n      } bg-${props.mode === \"light\" ? \"light\" : \"dark\"}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/whatschat\">\r\n                WhatsApp Chat\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              style={{\r\n                color: `${props.mode === \"light\" ? \"black\" : \"white\"}`,\r\n                backgroundColor: `${\r\n                  props.mode === \"light\" ? \"white\" : \"#495057\"\r\n                }`,\r\n              }}\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          <div className=\"mx-2\">\r\n            <img\r\n              src={props.mode === \"light\" ? moon : sun}\r\n              style={\r\n                props.mode === \"dark\"\r\n                  ? {\r\n                      filter:\r\n                        \" invert(94%) sepia(17%) saturate(3848%) hue-rotate(2deg) brightness(106%) contrast(108%)\",\r\n                    }\r\n                  : {\r\n                      filter:\r\n                        \"invert(0%) sepia(88%) saturate(7450%) hue-rotate(245deg) brightness(80%) contrast(100%)\",\r\n                    }\r\n              }\r\n              height=\"30px\"\r\n              width=\"auto\"\r\n              type=\"button\"\r\n              alt=\"Mode Change icon\"\r\n              onClick={props.toggleMode}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set Title Here\",\r\n  aboutText: \"Set About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Button(props) {\r\n  /*\r\n    props includes :\r\n    1. btnText: Text to be show\r\n    2. onClick : when button is clicked this function will be called\r\n    3. btnType : type of button in bootstrap i.e. primary, sucess , danger etc\r\n    4. mode : its values are \"dark\" or \"light\", which tells whether the application in dark or light mode\r\n  */\r\n\r\n  const [hover, setHover] = useState(false);\r\n  const toggleHover = () => {\r\n    setHover(!hover);\r\n  };\r\n  const shadowColor = props.mode === \"dark\" ? \"black\" : \"gray\";\r\n  const bgColor =\r\n    props.mode === \"dark\"\r\n      ? { hue: 0, sat: 0, lum: 8 }\r\n      : { hue: 240, sat: 100, lum: 25 };\r\n  return (\r\n    <button\r\n      className={`btn btn-${props.btnType} m-1`}\r\n      onClick={props.onClick}\r\n      onMouseEnter={toggleHover}\r\n      onMouseLeave={toggleHover}\r\n      style={\r\n        hover\r\n          ? {\r\n              backgroundColor: `hsl(${bgColor.hue}, ${bgColor.sat}%, ${\r\n                bgColor.lum + 10\r\n              }%)`,\r\n              transition: \"0.3s ease-in\",\r\n              boxShadow: `3px 3px 30px 1px ${shadowColor}`,\r\n            }\r\n          : {\r\n              backgroundColor: `hsl(${bgColor.hue}, ${bgColor.sat}%, ${bgColor.lum}%)`,\r\n              color: \"white\",\r\n              boxShadow: \"none\",\r\n              transition: \"0.3s ease-in\",\r\n            }\r\n      }\r\n    >\r\n      {props.btnText}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nfunction TextArea(props) {\r\n  /**\r\n     Props includes:\r\n     1. text : value of the texarea\r\n     2. onchange: on change sets the value of text(usestate hook)\r\n     3. mode (dark or light)\r\n     */\r\n  return (\r\n    <textarea\r\n      className=\"form-control\"\r\n      rows=\"8\"\r\n      placeholder=\"Enter text here...\"\r\n      value={props.text}\r\n      id=\"myTextBox\"\r\n      style={{\r\n        color: `${props.mode === \"light\" ? \"black\" : \"white\"}`,\r\n        backgroundColor: `${props.mode === \"light\" ? \"white\" : \"#333333\"}`,\r\n      }}\r\n      onChange={props.onChange}\r\n    ></textarea>\r\n  );\r\n}\r\n\r\nexport default TextArea;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"./Utils/Button\";\r\nimport TextArea from \"./Utils/TextArea\";\r\n\r\nexport default function TextForm(props) {\r\n  /*\r\n    props includes :\r\n    1. heading: heading of the form\r\n    2. mode : its values are \"dark\" or \"light\", which tells whether the application in dark or light mode\r\n    3. showAlert(msg,type) : a function which if called will show the alert\r\n  */\r\n\r\n  //   text state\r\n  const [text, setText] = useState(\"\");\r\n\r\n  //   convert to uppercase\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase\", \"success\");\r\n  };\r\n  //   convert to lowercase\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase\", \"success\");\r\n  };\r\n\r\n  // copy text in textbox\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"myTextBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text Copied\", \"success\");\r\n  };\r\n\r\n  // handling extra spaces\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces Removed\", \"success\");\r\n  };\r\n\r\n  // capitalize each word\r\n  const handleCapClick = () => {\r\n    let newText = \"\";\r\n    let words = text.split(\" \");\r\n    for (let word of words) {\r\n      let newWord =\r\n        word.charAt(0).toUpperCase() + word.slice(1).toLowerCase() + \" \";\r\n      newText += newWord;\r\n    }\r\n    setText(newText);\r\n    props.showAlert(\"Each Word capitalized\", \"success\");\r\n  };\r\n\r\n  //   on change of form textarea\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  // on clearing the text\r\n  const handleClearText = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text Cleared\", \"danger\");\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        color: `${props.mode === \"light\" ? \"black\" : \"white\"}`,\r\n      }}\r\n    >\r\n      <div className=\"container\">\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <TextArea text={text} onChange={handleOnChange} mode={props.mode} />\r\n        </div>\r\n        <Button\r\n          btnText=\"Convert to Uppercase\"\r\n          onClick={handleUpClick}\r\n          btnType=\"primary\"\r\n          mode={props.mode}\r\n        />\r\n        <Button\r\n          btnText=\"Convert to Lowercase\"\r\n          onClick={handleLoClick}\r\n          btnType=\"primary\"\r\n          mode={props.mode}\r\n        />\r\n        <Button\r\n          btnText=\"Convert to Capitalize\"\r\n          onClick={handleCapClick}\r\n          btnType=\"primary\"\r\n          mode={props.mode}\r\n        />\r\n        <Button\r\n          btnText=\"Copy Text\"\r\n          onClick={handleCopy}\r\n          btnType=\"primary\"\r\n          mode={props.mode}\r\n        />\r\n        <Button\r\n          btnText=\"Clear Extra Space\"\r\n          onClick={handleExtraSpaces}\r\n          btnType=\"primary\"\r\n          mode={props.mode}\r\n        />\r\n        <Button\r\n          btnText=\"Clear\"\r\n          btnType=\"danger\"\r\n          onClick={handleClearText}\r\n          mode={props.mode}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"container mt-3\">\r\n        <h2>\r\n          <u> Text Summary</u>\r\n        </h2>\r\n        <p>\r\n          Your text has {text.trim() === \"\" ? 0 : text.trim().split(\" \").length}\r\n          words and {text.trim().length} characters.\r\n        </p>\r\n        <p>\r\n          {text.trim() === \"\" ? 0 : 0.008 * text.trim().split(\" \").length}\r\n          minutes approx to read the text.\r\n        </p>\r\n\r\n        <h2>\r\n          <u>Preview</u>\r\n        </h2>\r\n        <p style={{ textAlign: \"justify\" }}>\r\n          {text.length > 0 ? text : \"Enter Your text to preview...\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  /*\r\n    props includes :\r\n    1. alert: Text to be show\r\n    2. type: type of alert\r\n  */\r\n\r\n  // const capitalize = (word) => {\r\n  //   const lower = word.toLowerCase();\r\n  //   return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  // };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className=\"text-center\"\r\n        style={{\r\n          position: \"absolute\",\r\n          left: \"0\",\r\n          right: \"0\",\r\n          margin: \"auto\",\r\n          width: \"fit-content\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show text-center`}\r\n          role=\"alert\"\r\n        >\r\n          {props.alert.message}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\n\r\nexport default function PageNotFound() {\r\n  return (\r\n    <div>\r\n      <h1>404 Page Not Found</h1>\r\n    </div>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst FileUploaderPaneContainer = styled.div`\r\n  background-image: ${(props) =>\r\n    props.mode === \"light\"\r\n      ? `linear-gradient(\r\n    90deg,\r\n    rgba(231, 230, 255, 1) 0%,\r\n    rgba(241, 241, 255, 1) 39%,\r\n    rgba(206, 247, 255, 1) 100%\r\n  )`\r\n      : \"linear-gradient(315deg, #2d3436 0%, #000000 74%)\"};\r\n  min-height: 100%;\r\n  background-attachment: fixed;\r\n  color: ${(props) => (props.mode === \"dark\" ? \"#cccccc\" : \"black\")};\r\n`;\r\nexport default FileUploaderPaneContainer;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"../Utils/Button\";\r\nimport serverIP from \"../../Server\";\r\nimport FileUploaderPaneContainer from \"./StyledComponents/FileUploaderPaneContainer\";\r\nfunction FileUploaderPane(props) {\r\n  /*\r\n  1. setChat : a function to set the chat list for the chat pane\r\n  2. mode : its values are \"dark\" or \"light\", which tells whether the application in dark or light mode\r\n  3. setLoading: a function to set the state of loading (true or false), when the api call is made\r\n  4. loading: a flag to tell whether page is loading or not\r\n  5. showAlert(msg,type) : a function which if called will show the alert\r\n  6. setYou : which sets which person is \"you\"\r\n  */\r\n\r\n  const [chatFile, setChatFile] = useState(null);\r\n  const [persons, setPersons] = useState(null);\r\n  const handleChatFile = (event) => {\r\n    setChatFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!chatFile) {\r\n      props.showAlert(\"Select a txt file!!\", \"danger\");\r\n      return;\r\n    } else {\r\n      props.showAlert(\"Uploading...\", \"primary\");\r\n    }\r\n    let form_data = new FormData();\r\n    form_data.append(\"chatfile\", chatFile, chatFile.name);\r\n    let url = `${serverIP}/api/wchat/`;\r\n    props.setLoading(true);\r\n    axios\r\n      .post(url, form_data, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setPersons(res.data[0]);\r\n        props.setChat(res.data[1]);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.status === 400) {\r\n          props.showAlert(\"Unsupported File !!!\", \"danger\");\r\n        } else if (error.response.status === 500) {\r\n          props.showAlert(\"Servor Error !!!\", \"danger\");\r\n        } else {\r\n          props.showAlert(\"Some Error Occured !!!\", \"danger\");\r\n        }\r\n      })\r\n      .finally(() => {\r\n        props.setLoading(false);\r\n      });\r\n  };\r\n  const handleOnChange = (e) => {\r\n    props.setYou(e.target.value);\r\n  };\r\n  return (\r\n    <FileUploaderPaneContainer mode={props.mode}>\r\n      <div className=\"container text-center\">\r\n        <div className=\"mb-3\">\r\n          <h3>WhatsApp Chat from Text File</h3>\r\n        </div>\r\n        <form>\r\n          <p>\r\n            <label>Open Text File</label>\r\n            <br />\r\n            <input\r\n              type=\"file\"\r\n              id=\"chatfile\"\r\n              accept=\".txt\"\r\n              onChange={handleChatFile}\r\n              required\r\n              style={{\r\n                border: \"1px solid gray\",\r\n                borderRadius: \"3px\",\r\n                padding: \"3px\",\r\n              }}\r\n            />\r\n          </p>\r\n\r\n          <p>\r\n            <label>Who are you?</label>\r\n            <br />\r\n            <select id=\"whoareyou\" onChange={handleOnChange} defaultValue={\"\"}>\r\n              <option value=\"\">--Select--</option>\r\n              {persons\r\n                ? persons.map((item, index) => (\r\n                    <option value={item} key={index}>\r\n                      {item}\r\n                    </option>\r\n                  ))\r\n                : \"\"}\r\n            </select>\r\n          </p>\r\n          {props.loading ? (\r\n            \"\"\r\n          ) : (\r\n            <Button\r\n              btnText=\"Submit\"\r\n              mode={props.mode}\r\n              btnType=\"success\"\r\n              onClick={handleSubmit}\r\n            />\r\n          )}\r\n        </form>\r\n      </div>\r\n    </FileUploaderPaneContainer>\r\n  );\r\n}\r\n\r\nexport default FileUploaderPane;\r\n","//const serverIP = \" http://127.0.0.1:8000\";\r\n\r\nconst serverIP = \" http://3.7.70.78\";\r\n\r\nexport default serverIP;\r\n","import React from \"react\";\r\n\r\nfunction Date(props) {\r\n  return (\r\n    <div>\r\n      <div style={props.mode === \"light\" ? dateStyleLight : dateStyleDark}>\r\n        {props.date}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst dateStyleLight = {\r\n  backgroundColor: \"#e1f2fb\",\r\n  width: \"fit-content\",\r\n  textAlign: \"center\",\r\n  margin: \"auto auto 10px auto\",\r\n  padding: \"5px\",\r\n  borderRadius: \"5px\",\r\n};\r\nconst dateStyleDark = {\r\n  backgroundColor: \"black\",\r\n  width: \"fit-content\",\r\n  textAlign: \"center\",\r\n  margin: \"auto auto 10px auto\",\r\n  padding: \"5px\",\r\n  borderRadius: \"5px\",\r\n  color: \"#cccccc\",\r\n};\r\nexport default Date;\r\n","import styled from \"styled-components\";\r\nconst MessageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-${(props) =>\r\n    props.person === props.you ? \"end\" : \"start\"};\r\n  padding-${(props) => (props.person === props.you ? \"right\" : \"left\")}: 10px;\r\n`;\r\nexport default MessageContainer;\r\n","import styled from \"styled-components\";\r\n\r\nconst MessageWrapper = styled.div`\r\n  border: 1px solid\r\n    ${(props) =>\r\n      props.person === props.you\r\n        ? props.mode === \"light\"\r\n          ? \"#dcf8c6\"\r\n          : \"#056162\"\r\n        : props.mode === \"light\"\r\n        ? \"#f2f2f2\"\r\n        : \"#262d31\"};\r\n  border-radius: 15px;\r\n  padding: 5px;\r\n  margin-bottom: 3px;\r\n  background-color: ${(props) =>\r\n    props.person === props.you\r\n      ? props.mode === \"light\"\r\n        ? \"#dcf8c6\"\r\n        : \"#056162\"\r\n      : props.mode === \"light\"\r\n      ? \"#f2f2f2\"\r\n      : \"#262d31\"};\r\n  color: ${(props) =>\r\n    props.person === props.you\r\n      ? props.mode === \"light\"\r\n        ? \"black\"\r\n        : \"#e6e6e6\"\r\n      : props.mode === \"light\"\r\n      ? \"black\"\r\n      : \"#cccccc\"};\r\n  display: grid;\r\n  grid-template-areas: \"name name\" \"message time\";\r\n  max-width: 80%;\r\n`;\r\nexport default MessageWrapper;\r\n","import React from \"react\";\r\nimport Date from \"./Date\";\r\nimport MessageContainer from \"./StyledComponents/MessageContainer\";\r\nimport MessageWrapper from \"./StyledComponents/MessageWrapper\";\r\nfunction ChatMessage(props) {\r\n  return (\r\n    <>\r\n      {props.item.showdate === \"yes\" ? (\r\n        <Date date={props.item.date} mode={props.mode} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <MessageContainer person={props.item.person} you={props.you}>\r\n        <MessageWrapper\r\n          person={props.item.person}\r\n          you={props.you}\r\n          mode={props.mode}\r\n        >\r\n          <div style={nameStyle}> {props.item.person}</div>\r\n          <div style={messageStyle}>{props.item.message}</div>\r\n          <div style={timeStyle}>{props.item.time}</div>\r\n        </MessageWrapper>\r\n      </MessageContainer>\r\n    </>\r\n  );\r\n}\r\nconst nameStyle = {\r\n  gridArea: \"name\",\r\n  color: \"#6bcbef\",\r\n};\r\nconst messageStyle = {\r\n  gridArea: \"message\",\r\n  fontFamily: `Arial, Helvetica, sans-serif`,\r\n};\r\nconst timeStyle = {\r\n  color: \"#999999\",\r\n  gridArea: \"time\",\r\n  fontSize: \"0.7rem\",\r\n  paddingTop: \"55%\",\r\n  marginLeft: \"5px\",\r\n};\r\nexport default ChatMessage;\r\n","import styled from \"styled-components\";\r\n\r\nconst ChatPaneWrapper = styled.div`\r\n    background-image: ${(props) =>\r\n      props.mode === \"light\"\r\n        ? `linear-gradient(\r\n      90deg,\r\n      rgba(255, 219, 235, 1) 0%,\r\n      rgba(190, 220, 255, 1) 100%\r\n    );`\r\n        : `linear-gradient(90deg, rgba(6,3,36,1) 0%, rgba(24,24,47,1) 35%, rgba(3,54,65,1) 100%);`}\r\n    background-attachment: fixed;\r\n    min-height: 91vh;\r\n  `;\r\nexport default ChatPaneWrapper;\r\n","import React from \"react\";\r\nimport ChatMessage from \"./ChatMessage\";\r\nimport ChatPaneWrapper from \"./StyledComponents/ChatPaneWrapper\";\r\n\r\nexport default function ChatPane(props) {\r\n  /*\r\n  1. chat : it is a list containing all the messages\r\n  2. you: it the name of the person u want the chat in right side of pane\r\n  3. mode : its values are \"dark\" or \"light\", which tells whether the application in dark or light mode\r\n*/\r\n\r\n  return (\r\n    <ChatPaneWrapper mode={props.mode}>\r\n      {props.chat.length > 0\r\n        ? props.chat.map((item, index) => (\r\n            <ChatMessage\r\n              key={index}\r\n              item={item}\r\n              you={props.you}\r\n              mode={props.mode}\r\n            />\r\n          ))\r\n        : \"No Chats\"}\r\n    </ChatPaneWrapper>\r\n  );\r\n}\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst spin = keyframes`\r\n0% { transform: rotate(0deg); }\r\n100% { transform: rotate(360deg); }\r\n`;\r\nconst LoadingWrapper = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  z-index: 1;\r\n  width: 150px;\r\n  height: 150px;\r\n  margin: -75px 0 0 -75px;\r\n  border: 16px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 16px solid #3498db;\r\n  width: 120px;\r\n  height: 120px;\r\n  animation: ${spin} 0.5s linear infinite;\r\n`;\r\nexport default LoadingWrapper;\r\n","import React from \"react\";\r\nimport LoadingWrapper from \"./StyledComponents/LoadingWrapper\";\r\n\r\nfunction LoadingWheel() {\r\n  return (\r\n    <LoadingWrapper>\r\n      <span id=\"loading\"></span>\r\n    </LoadingWrapper>\r\n  );\r\n}\r\nexport default LoadingWheel;\r\n","import styled from \"styled-components\";\r\n\r\nconst WhatschatContainer = styled.div`\r\n  opacity: ${(props) => (props.loading ? \"0.3\" : \"1\")};\r\n  @media screen and (min-width: 750px) {\r\n    display: grid;\r\n    grid: 100%;\r\n    grid-auto-flow: column;\r\n    grid-gap: 3px;\r\n    grid-template-columns: 30% auto;\r\n    height: 91vh;\r\n  }\r\n  @media screen and (max-width: 750px) {\r\n    display: grid;\r\n    grid: 100%;\r\n    grid-auto-flow: row;\r\n    grid-gap: 3px;\r\n    grid-template-rows: 10% auto;\r\n  }\r\n`;\r\n\r\nexport default WhatschatContainer;\r\n","import React, { useState } from \"react\";\r\nimport FileUploaderPane from \"./FileUploaderPane\";\r\nimport ChatPane from \"./ChatPane\";\r\nimport LoadingWheel from \"./LoadingWheel\";\r\nimport WhatschatContainer from \"./StyledComponents/WhatschatContainer\";\r\n\r\nfunction Whatschat(props) {\r\n  /*\r\n  1. mode : its values are \"dark\" or \"light\", which tells whether the application in dark or light mode\r\n  2. showAlert(msg,type) : a function which if called will show the alert\r\n*/\r\n\r\n  const [chat, setChat] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [you, setYou] = useState(\"NULL\");\r\n  return (\r\n    <>\r\n      {loading ? <LoadingWheel /> : \"\"}\r\n      <WhatschatContainer loading={loading}>\r\n        <div style={item1Style}>\r\n          <FileUploaderPane\r\n            setChat={setChat}\r\n            mode={props.mode}\r\n            loading={loading}\r\n            setLoading={setLoading}\r\n            showAlert={props.showAlert}\r\n            setYou={setYou}\r\n          />\r\n        </div>\r\n        <div style={item2Style}>\r\n          <ChatPane chat={chat} you={you} mode={props.mode} />\r\n        </div>\r\n      </WhatschatContainer>\r\n    </>\r\n  );\r\n}\r\nconst item1Style = {\r\n  // ls\r\n};\r\nconst item2Style = {\r\n  overflowY: \"scroll\",\r\n  scrollbarColor: \"rgba(var(--black-rgb),.2) rgba(var(--white-rgb),.1)\",\r\n  scrollbarWidth: \"thin\",\r\n  border: \"1px solid gray\",\r\n};\r\n\r\nexport default Whatschat;\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Utils/Alert\";\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport PageNotFound from \"./components/PageNotFound\";\nimport Whatschat from \"./components/Whatschat/Whatschat\";\n\nfunction App() {\n  // mode = dark or light\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (msg, type) => {\n    setAlert({\n      message: msg,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#05182B\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n\n        <Routes>\n          <Route\n            exact\n            path=\"/\"\n            element={\n              <div className=\"container mt-3\">\n                <TextForm\n                  heading=\"Enter the text to analyze below\"\n                  mode={mode}\n                  showAlert={showAlert}\n                />\n              </div>\n            }\n          />\n\n          <Route\n            exact\n            path=\"/whatschat\"\n            element={<Whatschat mode={mode} showAlert={showAlert} />}\n          />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}